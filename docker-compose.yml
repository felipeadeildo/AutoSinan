services:
  postgres:
    container_name: postgres
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: autosinan-backend
    restart: always
    env_file:
      - .env
    environment:
      DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - backend_data:/app

  frontend:
    build:
      context: ./frontend
    container_name: autosinan-frontend
    restart: always
    networks:
      - app-network
    environment:
      DOMAIN: ${DOMAIN}

  nginx:
    image: nginx:1.25.3-alpine
    container_name: autosinan-nginx
    restart: unless-stopped
    ports:
      - '${HTTP_NGINX_PORT}:80'
      - '${HTTPS_NGINX_PORT}:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/letsencrypt
      - ./nginx/logs:/var/log/nginx
      - ./certbot/www:/var/www/certbot
    depends_on:
      - certbot
      - frontend
    networks:
      - app-network
    environment:
      DOMAIN: ${DOMAIN}

  certbot:
    image: certbot/certbot:latest
    container_name: autosinan-certbot
    restart: unless-stopped
    volumes:
      - ./certs:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot certonly --webroot -w /var/www/certbot -d ${DOMAIN} --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  backend_data:
  nginx_logs:
  certbot_challenges:
